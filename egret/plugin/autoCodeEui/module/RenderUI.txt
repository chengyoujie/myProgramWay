/**
 * AutoCodeEui 生成的界面 
 * http://svn.jiulingwan.com/CQLL/cqll-devel/client/tags/tools/AutoCodeEUI
 * euiPath:${path} 
 * made by ${auth}
 * create on ${time} 
 */
class ${shortName}RenderUI extends BaseRender<${shortName}RenderVO> {
    
    ${varids}
    
    constructor() {
        super();
        let self = this;
        self.once(eui.UIEvent.COMPLETE, self.euiSKinComplete, self);
        self.skinName = '${skinName}';
    }

    protected euiSKinComplete(e: egret.Event): void {
        let self = this;
    }

    
    /** 刷新 */
    public dataChanged(): void {
        super.dataChanged();
        //TODO 数据更新操作
        this.dataSource = ${shortName}RenderDecoder.encode(this.data);
    }
}

//生成${shortName}Render对应的VO  
interface ${shortName}RenderVO{
    ${interfaceIds}
	[propName: string]: any  //这里设置的是任意类型
}